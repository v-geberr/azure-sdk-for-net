// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.Language.LUIS.Programmatic.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class LuisApp
    {
        /// <summary>
        /// Initializes a new instance of the LuisApp class.
        /// </summary>
        public LuisApp()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LuisApp class.
        /// </summary>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        public LuisApp(IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), string name = default(string), string versionId = default(string), string desc = default(string), string culture = default(string), IList<HierarchicalModel> intents = default(IList<HierarchicalModel>), IList<HierarchicalModel> entities = default(IList<HierarchicalModel>), IList<string> bingEntities = default(IList<string>), IList<JSONAction> actions = default(IList<JSONAction>), IList<ClosedList> closedLists = default(IList<ClosedList>), IList<HierarchicalModel> composites = default(IList<HierarchicalModel>), IList<JSONRegexFeature> regexFeatures = default(IList<JSONRegexFeature>), IList<JSONModelFeature> modelFeatures = default(IList<JSONModelFeature>), IList<JSONUtterance> utterances = default(IList<JSONUtterance>))
        {
            AdditionalProperties = additionalProperties;
            Name = name;
            VersionId = versionId;
            Desc = desc;
            Culture = culture;
            Intents = intents;
            Entities = entities;
            BingEntities = bingEntities;
            Actions = actions;
            ClosedLists = closedLists;
            Composites = composites;
            RegexFeatures = regexFeatures;
            ModelFeatures = modelFeatures;
            Utterances = utterances;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets unmatched properties from the message are deserialized
        /// this collection
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "versionId")]
        public string VersionId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "desc")]
        public string Desc { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "culture")]
        public string Culture { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "intents")]
        public IList<HierarchicalModel> Intents { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "entities")]
        public IList<HierarchicalModel> Entities { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bing_entities")]
        public IList<string> BingEntities { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "actions")]
        public IList<JSONAction> Actions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "closedLists")]
        public IList<ClosedList> ClosedLists { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "composites")]
        public IList<HierarchicalModel> Composites { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "regex_features")]
        public IList<JSONRegexFeature> RegexFeatures { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "model_features")]
        public IList<JSONModelFeature> ModelFeatures { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "utterances")]
        public IList<JSONUtterance> Utterances { get; set; }

    }
}
